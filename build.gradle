plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "4.2.1.3168"
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.sokuri'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'org.apache.commons:commons-lang3'
    implementation "org.mariadb.jdbc:mariadb-java-client"
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    implementation 'org.slf4j:slf4j-api'

    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation 'com.h2database:h2'
    implementation 'com.theokanning.openai-gpt3-java:client:0.9.0'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    implementation 'org.hibernate:hibernate-spatial:6.2.9.Final'
    implementation 'org.geolatte:geolatte-geom:1.8.2'
    implementation 'org.hibernate:hibernate-core:6.1.7.Final'

    // 구글 시트
    implementation 'com.google.guava:guava'
    implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.31.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.27.0'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev581-1.25.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20220815-2.0.0'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.projectlombok:lombok'

    // 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.json:json:20231013'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // 레디스
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    annotationProcessor (
            'org.projectlombok:lombok',
            'jakarta.persistence:jakarta.persistence-api',
            'jakarta.annotation:jakarta.annotation-api',
            "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    )

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.findify:s3mock_2.13:0.2.6'
    testImplementation 'com.jayway.jsonpath:json-path'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'it.ozimov:embedded-redis:0.7.2'

//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

jacoco {
    toolVersion = '0.8.10'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }

    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'BUNDLE'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00 //fixme: 테스트 코드 진행 후, 테스트 커버리지 상향 조정
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'programmerstylerteam'
        property 'sonar.projectKey', 'Java-and-Script_pickple-back'
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

jar {
    enabled = false
}
